---
import LanguagePicker from './LanguagePicker.astro';
const { currentLocale } = Astro;
const navItems = [
  {
    title:
      currentLocale == "en"
        ? "Experience"
        : currentLocale == "es"
          ? "Experiencia"
          : "",
    label:
      currentLocale == "en"
        ? "experience"
        : currentLocale == "es"
          ? "experiencia"
          : "",
    url: "#experience",
  },
  {
    title:
      currentLocale == "en"
        ? "Projects"
        : currentLocale == "es"
          ? "Proyectos"
          : "",
    label:
      currentLocale == "en"
        ? "projects"
        : currentLocale == "es"
          ? "proyectos"
          : "",
    url: "#projects",
  },
  {
    title:
      currentLocale == "en"
        ? "About me"
        : currentLocale == "es"
          ? "Sobre mí"
          : "",
    label:
      currentLocale == "en" ? "about" : currentLocale == "es" ? "sobremi" : "",
    url: "#about",
  },
  {
    title:
      currentLocale == "en"
        ? "Contact"
        : currentLocale == "es"
          ? "Contacto"
          : "",
    label:
      currentLocale == "en"
        ? "contact"
        : currentLocale == "es"
          ? "contacto"
          : "",
    url: "mailto:fgonzalezserrano10@gmail.com",
  },
];
---

<header
id="header"
  class="fixed top-0 z-10 flex items-center justify-center w-full mt-2 mx-2 transition-transform duration-300"
>
  <nav
    class="flex flex-col sm:flex-row px-3 text-xs sm:text-sm font-medium rounded-lg sm:rounded-full text-gray-200 justify-center items-center border-2 border-white border-opacity-20"
  >
    {
      navItems.map((link) => (
        <a
          class="relative block px-2 py-2 transition hover:text-blue-500 dark:hover:text-blue-500"
          aria-label={link.label}
          href={link.url}
          onclick="handleNavClick()"
        >
          {link.title}
        </a>
        <hr class="bg-white w-full h-0.5 sm:hidden">
      ))
    }
    <br class="sm:hidden">
    <LanguagePicker />
    <br class="sm:hidden">
    <hr class="bg-white w-full h-0.5 sm:hidden">
    <br class="sm:hidden">
  </nav>
</header>

<script>
  document.addEventListener("astro:page-load", () => {
    // Intersection Observer
    const sections = document.querySelectorAll("section");
    const navItems = document.querySelectorAll("header nav a");

    const callback = (entries: any[]) => {
      entries.forEach((entry) => {
        if (entry.isIntersecting) {
          navItems.forEach((item) => {
            if (item.getAttribute("aria-label") == entry.target.id) {
              item.classList.add("text-blue-500");
            } else {
              item.classList.remove("text-blue-500");
            }
          });
        }
      });
    };

    const observer = new IntersectionObserver(callback, {
      root: null,
      rootMargin: "0px",
      threshold: 0.3,
    });

    sections.forEach((section) => {
      observer.observe(section);
    });

    // Cleanup function
    document.onvisibilitychange = () => {
      if (document.visibilityState === "hidden") {
        observer.disconnect();
      } else {
        sections.forEach((section) => {
          observer.observe(section);
        });
      }
    };

    
    // Scroll hide observer
    let lastScrollY = window.scrollY;
    const header = document.getElementById("header");

    const handleScroll = () => {
      if (window.scrollY > lastScrollY) {
        header?.classList.add("-translate-y-full");
        header?.classList.remove("mt-2");
      } else {
        header?.classList.remove("-translate-y-full");
        header?.classList.add("mt-2");
      }
      lastScrollY = window.scrollY;

      // Mostrar el header nuevamente cuando esté en el top
      if (window.scrollY === 0) {
        header?.classList.remove("-translate-y-full");
        header?.classList.add("mt-2");
      }
    };

    // Escuchar el evento de scroll
    window.addEventListener("scroll", handleScroll);

     // Función para manejar el clic en un enlace de anclaje
     window.handleNavClick = () => {
      setTimeout(() => {
        header?.classList.add("-translate-y-full");
        header?.classList.remove("mt-2");
      }, 10);
    };
  });
</script>

<style>
  nav {
    animation: nav-shadown 1s linear both;
    animation-timeline: scroll();
    animation-range: 0 100px;
  }

  nav {
    @apply dark:bg-gray-800/90 bg-[#1C1C1C];
  }

  @keyframes nav-shadown {
    0% {
      @apply dark:bg-gray-800/0 bg-white/0;
    }
    to {
      @apply shadow-lg ring-1 backdrop-blur ring-white/10;
    }
  }
</style>
